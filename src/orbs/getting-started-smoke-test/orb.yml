version: 2.1

description: "This orb contains a collection of jobs for smoke testing the AWS Amplify library's Getting Started flows on all supported platforms and frameworks"

display:
  source_url: 'https://github.com/aws-amplify/amplify-ci-support/src/orbs/getting-started-smoke-test'

executors:
  web-executor:
    docker:
      - image: cimg/node:lts
    resource_class: large

  mac-executor:
    macos:
      # TODO: use param for this
      xcode: 13.3.1
    resource_class: large

  android-executor:
    machine:
      image: android:202102-01
    resource_class: large

js_env_vars: &js_env_vars
  environment:
    IMPORT_STATEMENT: import {Logger} from 'aws-amplify';
    LIBRARY_STATEMENT: Logger.LOG_LEVEL='DEBUG';
    MAX_WAIT_ON_TIMEOUT: 180000 # 3 minutes; how long we wait for the build to succeed before failing the job

jobs:
  web:
    description: 'Test Getting Started Flow for Web'
    parameters:
      framework:
        type: string
      npx-command:
        type: string
      npx-post:
        type: string
        default: ''
      main-file-path:
        type: string
      dev-start:
        type: string
        default: start
      dev-port:
        type: integer
        default: 3000
      build-dir:
        type: string
      ssr:
        type: boolean
        default: false
    executor: web-executor
    <<: *js_env_vars
    working_directory: ~/project/amplify-getting-started-<< parameters.framework >>
    steps:
      - run:
          name: Scaffold App
          command: cd ../ && npx -y << parameters.npx-command >> amplify-getting-started-<< parameters.framework >> << parameters.npx-post >>
          no_output_timeout: 3m
      - run:
          name: Install AmplifyJS
          command: npm i -S aws-amplify && npm i -g wait-on serve
      - run:
          name: Call Amplify library in code
          command: |
            echo "$IMPORT_STATEMENT" | cat - << parameters.main-file-path >> | tee << parameters.main-file-path >>
            echo "$LIBRARY_STATEMENT" >> << parameters.main-file-path >>
      - run:
          name: Run in Dev Mode
          command: npm run << parameters.dev-start >> & wait-on http://localhost:<< parameters.dev-port >> -t $MAX_WAIT_ON_TIMEOUT
      - unless:
          condition: << parameters.ssr >>
          steps:
            - run:
                name: Run in Prod Mode
                command: npm run build && (serve -n -s << parameters.build-dir >> -l 4000 & wait-on http://localhost:4000  -t $MAX_WAIT_ON_TIMEOUT)
      - when:
          condition: << parameters.ssr >>
          steps:
            - run:
                name: Run in Prod Mode
                command: npm run build && (npm start & wait-on http://localhost:3000  -t $MAX_WAIT_ON_TIMEOUT)

  rn-ios:
    description: 'Test Getting Started Flow for React Native iOS'
    parameters:
      framework:
        type: string
      main-file-path:
        type: string
      tag:
        type: string
        default: latest
    executor: mac-executor
    working_directory: ~/amplify_getting_started_<< parameters.framework >>
    steps:
      - run:
          name: Scaffold App
          command: cd ../ && rm -rf amplify_getting_started_<< parameters.framework >> && npx react-native@<< parameters.tag >> init amplify_getting_started_<< parameters.framework >>
          no_output_timeout: 10m
      - run:
          name: Install Amplify dependencies
          command: npm install aws-amplify aws-amplify-react-native amazon-cognito-identity-js @react-native-community/netinfo @react-native-async-storage/async-storage @react-native-picker/picker
      - run:
          name: Pod Install
          command: npx pod-install
      - run:
          name: Call Amplify library in code
          command: |
            echo "$IMPORT_STATEMENT" | cat - << parameters.main-file-path >> | tee << parameters.main-file-path >>
            echo "$LIBRARY_STATEMENT" >> << parameters.main-file-path >>
      - run:
          name: Start App
          command: npm run ios

  rn-android:
    description: 'Test Getting Started Flow on React Native Android'
    parameters:
      framework:
        type: string
      main-file-path:
        type: string
      tag:
        type: string
        default: latest
    executor: android-executor
    working_directory: ~/amplify_getting_started_<< parameters.framework >>
    steps:
      - run:
          name: Create avd
          command: |
            SYSTEM_IMAGES="system-images;android-29;default;x86"
            sdkmanager "$SYSTEM_IMAGES"
            echo "no" | avdmanager --verbose create avd -n test -k "$SYSTEM_IMAGES"
      - run:
          name: Scaffold App
          command: cd ../ && rm -rf amplify_getting_started_<< parameters.framework >> && npx react-native@<< parameters.tag >> init amplify_getting_started_<< parameters.framework >>
          no_output_timeout: 10m
      - run:
          name: Install Amplify dependencies
          command: npm install aws-amplify aws-amplify-react-native amazon-cognito-identity-js @react-native-community/netinfo @react-native-async-storage/async-storage @react-native-picker/picker
      - run:
          name: Call Amplify library in code
          command: |
            echo "$IMPORT_STATEMENT" | cat - << parameters.main-file-path >> | tee << parameters.main-file-path >>
            echo "$LIBRARY_STATEMENT" >> << parameters.main-file-path >>
      - run:
          background: true
          command: xcrun simctl boot "iPhone 13" || true
          name: Start iOS simulator (background)
      - run:
          name: Start App
          command: npm run android

  expo:
    description: 'Test Getting Started Flow on Expo (Web)'
    parameters:
      framework:
        type: string
      main-file-path:
        type: string
      tag:
        type: string
        default: latest
    executor: web-executor
    <<: *js_env_vars
    working_directory: ~/amplify_getting_started_<< parameters.framework >>
    steps:
      - run:
          name: Install Expo
          command: npm i -g expo-cli@<< parameters.tag >> wait-on
      - run:
          name: Scaffold App
          command: cd ../ && rm -rf amplify_getting_started_<< parameters.framework >> && expo-cli init amplify_getting_started_<< parameters.framework >> --yes
          no_output_timeout: 5m
      - run:
          name: Install Amplify dependencies
          command: yarn add aws-amplify aws-amplify-react-native @react-native-community/netinfo @react-native-async-storage/async-storage @react-native-picker/picker
      - run:
          name: Call Amplify library in code
          command: |
            echo "$IMPORT_STATEMENT" | cat - << parameters.main-file-path >> | tee << parameters.main-file-path >>
            echo "$LIBRARY_STATEMENT" >> << parameters.main-file-path >>
      - run:
          name: Start App
          command: yarn web & wait-on http://localhost:19006  -t $MAX_WAIT_ON_TIMEOUT
