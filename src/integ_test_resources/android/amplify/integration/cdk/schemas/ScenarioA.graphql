# Scenario A - Owner-based auth scenarios

# Test case 1 - Owner field not explicitly provided in the schema.
type ScenarioATest1Post @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  title: String!
}

# Test case 2 - Owner field (with default field name of owner) explicitly provided in the schema.
type ScenarioATest2Post @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  title: String!
  owner: String
}

# Test 3 is pending

# Test case 4 - Custom owner field specified in the directive, but not the schema.
type ScenarioATest4Post @model @auth(rules: [{ allow: owner, ownerField: "dominus" }]) {
  id: ID!
  title: String!
}

# Test case 5 - Custom owner field specified in the directive and also the schema.
type ScenarioATest5Post @model @auth(rules: [{ allow: owner, ownerField: "dominus" }]) {
  id: ID!
  title: String!
  dominus: String
}

# Test case 6 - Custom identity claim
type ScenarioATest6Post
        @model 
        @auth(rules: [{ allow: owner, identityClaim: "sub" }]) {
  id: ID!
  title: String!
}
