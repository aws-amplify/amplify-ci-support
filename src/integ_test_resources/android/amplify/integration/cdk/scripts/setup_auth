#!/usr/bin/env python3
from common import *
import os

AMPLIFY_AUTH_CONFIG = {
    'version': 1,
    'resourceName':'AndroidIntegTestAuth',
    'serviceConfiguration': {
        'serviceName': 'Cognito',
        'userPoolConfiguration': {
            'requiredSignupAttributes':['EMAIL', 'NAME', 'NICKNAME'],
            'signinMethod':'USERNAME',
            'userPoolGroups': [ 
                { 'groupName': 'Admins' },
                { 'groupName': 'Bloggers' },
                { 'groupName': 'Moderators' }
            ],
            'writeAttributes': ['EMAIL', 'NAME', 'NICKNAME'],
            'readAttributes':['EMAIL', 'NAME', 'NICKNAME'],
            'refreshTokenPeriod': 365,
            # 'adminQueries': {
            #     'permissions': {
            #         'restrictAccess': True,
            #         'groupName': 'Admins'
            #     }
            # },
        },
        'includeIdentityPool': True,
        'identityPoolConfiguration': {
            'unauthenticatedLogin': True,
            'identityPoolName': 'androididpool'
        }

    }
}

def add_auth():
    add_auth_cmd = [AMPLIFY_COMMAND,
                    "add",
                    "auth",
                    "--headless"]
    result = run_command(add_auth_cmd, input=json.dumps(AMPLIFY_AUTH_CONFIG))
    return result.returncode

# ENTRY POINT
os.system(f"mkdir -p {PROJECT_DIR}")
existing_app = get_existing_app_id()
if existing_app is None:
    # create the app
    print("Need to create a new app")
    initialize_new_app()
else:
    # pull the app
    print(f"Pulling existing app with id {existing_app['appId']}")
    pull_existing_app(existing_app['appId'])

if (add_auth() == 0):
    push()
